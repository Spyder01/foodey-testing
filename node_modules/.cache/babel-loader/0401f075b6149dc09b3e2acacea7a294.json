{"ast":null,"code":"var _jsxFileName = \"/home/suhan/Foodey/foodey-testing/src/pages/Orders.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"../components/navBar\";\nimport { getOrders } from \"../firebase/db\";\nimport { useRecoilValue } from \"recoil\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from 'react-router-dom';\nimport { List, Chip, ListItem, ListItemText, Card, Divider } from \"@material-ui/core\";\nimport Cooks from \"../store/cooks\";\nimport store from \"../store\";\nimport \"./styles/Orders.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  Card: {\n    width: \"75%\",\n    [\"@media (max-width:500px)\"]: {\n      // eslint-disable-line no-useless-computed-key\n      width: \"100%\"\n    }\n  },\n  List: {},\n  ListItem: {\n    position: \"relative\"\n  },\n  Badge: {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    color: \"white\",\n    backgroundColor: \"green\"\n  }\n});\n\nconst Orders = () => {\n  _s();\n\n  const styles = useStyles();\n  const [data, setData] = useState([]);\n  const isLoggedIn = useRecoilValue(store.isLoggedIn);\n  const phone = useRecoilValue(store.phoneNo);\n  const History = useHistory();\n  const Data = data.map(ele => {\n    const name = Cooks.filter(cook => {\n      if (cook.id === ele.cookID) return cook.Name;\n    })[0][\"Name\"];\n    console.log(ele.verified);\n    return { ...ele,\n      name\n    };\n  });\n  useEffect(() => {\n    if (!isLoggedIn) return History.push(\"/login\");\n    getOrders(null, phone).then(ele => setData(ele));\n  }, []);\n  if (phone === null) History.push('/login');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      active: \"Community\",\n      display: true,\n      Color: \"#FBFEFD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"OrdersMainArea\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: styles.Card,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          className: styles.List,\n          children: Data.map(item => /*#__PURE__*/_jsxDEV(Items, {\n            name: item.name,\n            date: item.date,\n            subscription: item.subscription,\n            verified: item.verified\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Orders, \"dJxw91M1hyoBJvA4v8ePmmziMKg=\", false, function () {\n  return [useStyles, useRecoilValue, useRecoilValue, useHistory];\n});\n\n_c = Orders;\nexport default Orders;\n\nconst Items = props => {\n  _s2();\n\n  const styles = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n      className: styles.ListItem,\n      children: [/*#__PURE__*/_jsxDEV(Chip, {\n        label: \"Verified\",\n        style: {\n          display: props.verified ? \"flex\" : \"none\"\n        },\n        className: styles.Badge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: props.name,\n        secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Subscription: \", props.subscription, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 50\n          }, this), \"Date: \", props.date]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Items, \"3bjLmUB54uhXRX+frDMowQzU8P8=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Items;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Orders\");\n$RefreshReg$(_c2, \"Items\");","map":{"version":3,"sources":["/home/suhan/Foodey/foodey-testing/src/pages/Orders.js"],"names":["React","useState","useEffect","NavBar","getOrders","useRecoilValue","makeStyles","useHistory","List","Chip","ListItem","ListItemText","Card","Divider","Cooks","store","useStyles","width","position","Badge","top","right","color","backgroundColor","Orders","styles","data","setData","isLoggedIn","phone","phoneNo","History","Data","map","ele","name","filter","cook","id","cookID","Name","console","log","verified","push","then","item","date","subscription","Items","props","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport NavBar from \"../components/navBar\";\nimport { getOrders } from \"../firebase/db\";\nimport { useRecoilValue } from \"recoil\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {useHistory} from 'react-router-dom';\nimport {\n  List,\n  Chip,\n  ListItem,\n  ListItemText,\n  Card,\n  Divider,\n} from \"@material-ui/core\";\nimport Cooks from \"../store/cooks\";\nimport store from \"../store\";\nimport \"./styles/Orders.css\";\n\nconst useStyles = makeStyles({\n  Card: {\n    width: \"75%\",\n    [\"@media (max-width:500px)\"]: {\n      // eslint-disable-line no-useless-computed-key\n      width: \"100%\",\n    },\n  },\n  List: {},\n  ListItem: {\n    position: \"relative\",\n  },\n  Badge: {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    color: \"white\",\n    backgroundColor: \"green\",\n  },\n});\n\nconst Orders = () => {\n  const styles = useStyles();\n  const [data, setData] = useState([]);\n  const isLoggedIn = useRecoilValue(store.isLoggedIn);\n  const phone = useRecoilValue(store.phoneNo);\n  const History = useHistory ();\n\n  const Data = data.map((ele) => {\n    const name = Cooks.filter((cook) => {\n      if (cook.id === ele.cookID) return cook.Name;\n    })[0][\"Name\"];\n    console.log(ele.verified)\n    return {\n      ...ele,\n      name,\n    };\n  });\n\n\n\n  useEffect(() => {\n  if (!isLoggedIn) return History.push(\"/login\");\n\n    getOrders(null, phone).then((ele) => setData(ele));\n  }, []);\n\n  if (phone === null) \n    History.push ('/login');\n\n  return (\n    <>\n      <NavBar active=\"Community\" display={true} Color=\"#FBFEFD\" />\n      <div className=\"OrdersMainArea\">\n        <Card className={styles.Card}>\n          <List className={styles.List}>\n            {Data.map((item) => (\n              <Items\n                name={item.name}\n                date={item.date}\n                subscription={item.subscription}\n                verified={item.verified}\n              />\n            ))}\n          </List>\n        </Card>\n      </div>\n    </>\n  );\n};\n\nexport default Orders;\n\nconst Items = (props) => {\n  const styles = useStyles();\n  return (\n    <>\n      <Divider />\n      <ListItem className={styles.ListItem}>\n        <Chip\n          label=\"Verified\"\n          style={{ display: props.verified ? \"flex\" : \"none\" }}\n          className={styles.Badge}\n        />\n        <ListItemText\n          primary={props.name}\n          secondary={\n            <>\n              Subscription: {props.subscription} <br />\n              Date: {props.date}\n            </>\n          }\n        />\n      </ListItem>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}