{"ast":null,"code":"var _jsxFileName = \"/home/suhan/Foodey/foodey-testing/src/pages/stateScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Card, CardActionArea, CardContent, Grid, Avatar } from \"@material-ui/core\";\nimport { getCookByState } from '../firebase/db';\nimport { useRecoilState } from 'recoil';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport NavBar from \"../components/navBar\";\nimport StateData from \"../store/StateData\";\nimport cooksData from \"../store\";\nimport \"./styles/stateScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Styles = makeStyles({\n  body: {\n    maxWidth: 250,\n    fontFamily: `'Poppins', sans-serif`,\n    borderRadius: 0,\n    backgroundColor: \"#FBFEFD\",\n    boxShadow: \"none\",\n    //  height: 500\n    [\"@media (max-width:500px)\"]: {\n      // eslint-disable-line no-useless-computed-key\n      display: \"flex\",\n      justifyContent: \"center\"\n    }\n  },\n  grid: {\n    margin: \"10vh 5vw 0 10vw\",\n    [\"@media (max-width:500px)\"]: {\n      // eslint-disable-line no-useless-computed-key\n      margin: 0,\n      overFlowX: \"hidden\",\n      paddingLeft: \"15vw\"\n    }\n  },\n  image: {\n    height: 250,\n    width: 250 //   objectToFit: \"cover\"\n\n  },\n  content: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    justifyContent: \"center\"\n  }\n});\n\nconst stateScreen = () => {\n  const styles = Styles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stateScreen\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      active: \"Community\",\n      display: true,\n      Color: \"#FBFEFD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statesHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select a State of your choice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      className: styles.grid,\n      direction: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: StateData.map(state => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 6,\n        lg: 4,\n        xl: 4,\n        children: /*#__PURE__*/_jsxDEV(Carder, {\n          title: state.title,\n          content: state.content,\n          Id: `grid${state.Id}`,\n          image: state.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\nexport default stateScreen;\n\nconst Carder = props => {\n  _s();\n\n  const styles = Styles();\n  const History = useHistory();\n  const [, setCurrCooks] = useRecoilState(cooksData.currCook);\n  const [, setCook] = useRecoilState(cooksData.selectedCook);\n\n  const path = () => {\n    const state = props.title;\n    getCookByState(state).then(cooks => {\n      if (cooks === null) alert(\"No Cooks assinged for this state.\");else if (cooks.length === 1) {\n        setCook(cooks[0]);\n        History.push(`/cook/${cooks[0].id}`);\n      } else {\n        setCurrCooks(cooks);\n        History.push(`/cooks/${state}`);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: props.Id,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.body,\n      onClick: path,\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: props.image,\n          className: styles.image,\n          alt: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: styles.content,\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: props.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Carder, \"8kWeciThIo7G6Xr4ps/x2borUaA=\", false, function () {\n  return [useHistory, useRecoilState, useRecoilState];\n});\n\n_c = Carder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carder\");","map":{"version":3,"sources":["/home/suhan/Foodey/foodey-testing/src/pages/stateScreen.js"],"names":["React","Card","CardActionArea","CardContent","Grid","Avatar","getCookByState","useRecoilState","makeStyles","useHistory","NavBar","StateData","cooksData","Styles","body","maxWidth","fontFamily","borderRadius","backgroundColor","boxShadow","display","justifyContent","grid","margin","overFlowX","paddingLeft","image","height","width","content","alignItems","stateScreen","styles","map","state","title","Id","Carder","props","History","setCurrCooks","currCook","setCook","selectedCook","path","then","cooks","alert","length","push","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,IAJF,EAKEC,MALF,QAMO,mBANP;AAOA,SAAQC,cAAR,QAA6B,gBAA7B;AACA,SAAQC,cAAR,QAA6B,QAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAO,0BAAP;;AAEA,MAAMC,MAAM,GAAGL,UAAU,CAAC;AACxBM,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,GADN;AAEJC,IAAAA,UAAU,EAAG,uBAFT;AAGJC,IAAAA,YAAY,EAAE,CAHV;AAIJC,IAAAA,eAAe,EAAE,SAJb;AAKJC,IAAAA,SAAS,EAAE,MALP;AAMJ;AACA,KAAC,0BAAD,GAA8B;AAC5B;AACAC,MAAAA,OAAO,EAAE,MAFmB;AAG5BC,MAAAA,cAAc,EAAE;AAHY;AAP1B,GADkB;AAcxBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,iBADJ;AAEJ,KAAC,0BAAD,GAA8B;AAC5B;AACAA,MAAAA,MAAM,EAAE,CAFoB;AAG5BC,MAAAA,SAAS,EAAE,QAHiB;AAI5BC,MAAAA,WAAW,EAAE;AAJe;AAF1B,GAdkB;AAwBxBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,GADH;AAELC,IAAAA,KAAK,EAAE,GAFF,CAGL;;AAHK,GAxBiB;AA6BxBC,EAAAA,OAAO,EAAE;AACPT,IAAAA,OAAO,EAAE,MADF;AAEPU,IAAAA,UAAU,EAAE,QAFL;AAGPF,IAAAA,KAAK,EAAE,MAHA;AAIPP,IAAAA,cAAc,EAAE;AAJT;AA7Be,CAAD,CAAzB;;AAqCA,MAAMU,WAAW,GAAG,MAAM;AACxB,QAAMC,MAAM,GAAGnB,MAAM,EAArB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,WAAf;AAA2B,MAAA,OAAO,EAAE,IAApC;AAA0C,MAAA,KAAK,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,OAAO,EAAE,CAFX;AAGE,MAAA,SAAS,EAAEmB,MAAM,CAACV,IAHpB;AAIE,MAAA,SAAS,EAAC,KAJZ;AAKE,MAAA,cAAc,EAAC,QALjB;AAME,MAAA,UAAU,EAAC,QANb;AAAA,gBAQGX,SAAS,CAACsB,GAAV,CAAeC,KAAD,iBACb,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAiC,QAAA,EAAE,EAAE,CAArC;AAAwC,QAAA,EAAE,EAAE,CAA5C;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,UAAA,OAAO,EAAED,KAAK,CAACL,OAFjB;AAGE,UAAA,EAAE,EAAG,OAAMK,KAAK,CAACE,EAAG,EAHtB;AAIE,UAAA,KAAK,EAAEF,KAAK,CAACR;AAJf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AARH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA9BD;;AAgCA,eAAeK,WAAf;;AAEA,MAAMM,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMN,MAAM,GAAGnB,MAAM,EAArB;AACA,QAAM0B,OAAO,GAAG9B,UAAU,EAA1B;AACA,QAAM,GAAG+B,YAAH,IAAmBjC,cAAc,CAAEK,SAAS,CAAC6B,QAAZ,CAAvC;AACA,QAAM,GAAGC,OAAH,IAAcnC,cAAc,CAAEK,SAAS,CAAC+B,YAAZ,CAAlC;;AACA,QAAMC,IAAI,GAAG,MAAM;AACjB,UAAMV,KAAK,GAAGI,KAAK,CAACH,KAApB;AACA7B,IAAAA,cAAc,CAAE4B,KAAF,CAAd,CAAuBW,IAAvB,CAA4BC,KAAK,IAAE;AACjC,UAAIA,KAAK,KAAG,IAAZ,EACEC,KAAK,CAAE,mCAAF,CAAL,CADF,KAEK,IAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AAC3BN,QAAAA,OAAO,CAAEI,KAAK,CAAC,CAAD,CAAP,CAAP;AACAP,QAAAA,OAAO,CAACU,IAAR,CAAe,SAAQH,KAAK,CAAC,CAAD,CAAL,CAASI,EAAG,EAAnC;AACD,OAHI,MAIA;AACHV,QAAAA,YAAY,CAAEM,KAAF,CAAZ;AACAP,QAAAA,OAAO,CAACU,IAAR,CAAe,UAASf,KAAM,EAA9B;AACD;AACF,KAXD;AAYD,GAdD;;AAeA,sBACE;AAAK,IAAA,EAAE,EAAEI,KAAK,CAACF,EAAf;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,SAAS,EAAEJ,MAAM,CAAClB,IADpB;AAEE,MAAA,OAAO,EAAE8B,IAFX;AAAA,6BAIE,QAAC,cAAD;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,GAAG,EAAEN,KAAK,CAACZ,KADb;AAEE,UAAA,SAAS,EAAEM,MAAM,CAACN,KAFpB;AAGE,UAAA,GAAG,EAAEY,KAAK,CAACH;AAHb;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEH,MAAM,CAACH,OAA/B;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,sBAA4BS,KAAK,CAACH;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAxCD;;GAAME,M;UAEY5B,U,EACSF,c,EACLA,c;;;KAJhB8B,M","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  Grid,\n  Avatar\n} from \"@material-ui/core\";\nimport {getCookByState} from '../firebase/db';\nimport {useRecoilState} from 'recoil';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport NavBar from \"../components/navBar\";\nimport StateData from \"../store/StateData\";\nimport cooksData from \"../store\";\nimport \"./styles/stateScreen.css\";\n\nconst Styles = makeStyles({\n  body: {\n    maxWidth: 250,\n    fontFamily: `'Poppins', sans-serif`,\n    borderRadius: 0,\n    backgroundColor: \"#FBFEFD\",\n    boxShadow: \"none\",\n    //  height: 500\n    [\"@media (max-width:500px)\"]: {\n      // eslint-disable-line no-useless-computed-key\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  },\n  grid: {\n    margin: \"10vh 5vw 0 10vw\",\n    [\"@media (max-width:500px)\"]: {\n      // eslint-disable-line no-useless-computed-key\n      margin: 0,\n      overFlowX: \"hidden\",\n      paddingLeft: \"15vw\",\n    },\n  },\n\n  image: {\n    height: 250,\n    width: 250\n    //   objectToFit: \"cover\"\n  },\n  content: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    justifyContent: \"center\",\n  }\n});\n\nconst stateScreen = () => {\n  const styles = Styles();\n\n  return (\n    <div className=\"stateScreen\">\n      <NavBar active=\"Community\" display={true} Color=\"#FBFEFD\" />\n      <div className=\"statesHeader\">\n        <h1>Select a State of your choice</h1>\n      </div>\n      <Grid\n        container\n        spacing={3}\n        className={styles.grid}\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        {StateData.map((state) => (\n          <Grid item xs={12} sm={6} md={6} lg={4} xl={4}>\n            <Carder\n              title={state.title}\n              content={state.content}\n              Id={`grid${state.Id}`}\n              image={state.image}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default stateScreen;\n\nconst Carder = (props) => {\n  const styles = Styles();\n  const History = useHistory();\n  const [, setCurrCooks] = useRecoilState (cooksData.currCook);\n  const [, setCook] = useRecoilState (cooksData.selectedCook)\n  const path = () => {\n    const state = props.title;\n    getCookByState (state).then(cooks=>{\n      if (cooks===null)\n        alert (\"No Cooks assinged for this state.\");\n      else if (cooks.length === 1) {\n        setCook (cooks[0]);\n        History.push (`/cook/${cooks[0].id}`)\n      }\n      else {\n        setCurrCooks (cooks);\n        History.push (`/cooks/${state}`);\n      }\n    })\n  };\n  return (\n    <div id={props.Id}>\n      <Card\n        className={styles.body}\n        onClick={path}\n      >\n        <CardActionArea>\n          <Avatar\n            src={props.image}\n            className={styles.image}\n            alt={props.title}\n          />\n          <CardContent className={styles.content}>\n            <h4 className=\"card-title\">{props.title}</h4>\n            {/*  <p className=\"card-body\">{props.content}</p>   */}\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}