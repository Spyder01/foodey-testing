{"ast":null,"code":"var _jsxFileName = \"/home/suhan/Foodey/foodey-testing/src/pages/Sign-up.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Box, Paper, Typography, TextField, Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport NavBar from \"../components/navBar\";\nimport { useRecoilState } from \"recoil\";\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport Auth from \"../firebase/auth.js\";\nimport { addUser, isUserExists } from \"../firebase/db\";\nimport { Link } from \"react-router-dom\";\nimport store from \"../store\";\nimport logo from \"../assets/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  btn: {\n    backgroundColor: \"#f36f27\",\n    color: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"#f36f27\",\n      color: \"#fff\"\n    }\n  }\n});\n\nconst Login = () => {\n  _s();\n\n  const styles = useStyles();\n  const History = useHistory();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const phoneNumber = phone.replace(\" \", \"\").replace(\"-\", \"\");\n    const userExists = await isUserExists(phone);\n    if (userExists) alert(\"User already exists.\");else {\n      const Verify = await Auth(phoneNumber);\n      setVerify(Verify);\n      console.log(Verify);\n      setDisplay(false);\n    }\n  };\n\n  const handleOTPSubmit = async () => {\n    console.log(verify);\n    verify.confirm(OTP).then(result => {\n      addUser({\n        Name: name,\n        email: email,\n        phoneNo: phone\n      });\n      setIsLoggedIn(true);\n      if (isOrdered) History.push(\"/invoice\");else History.push(\"/\");\n    });\n  };\n\n  const [phone, setPhone] = useRecoilState(store.phoneNo);\n  const [email, setEmail] = useRecoilState(store.email);\n  const [, setIsLoggedIn] = useRecoilState(store.isLoggedIn);\n  const [isOrdered] = useRecoilState(store.isOrdered);\n  const [name, setName] = useRecoilState(store.name);\n  const [display, setDisplay] = useState(true);\n  const [verify, setVerify] = useState(null);\n  const [OTP, setOTP] = useState(null);\n\n  const handleOnBlur = e => {\n    setPhone(e.target.value);\n    console.log(phone);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      active: \"login\",\n      Color: \"transparent\",\n      scroll: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: false,\n        sm: 4,\n        md: 7,\n        sx: {\n          backgroundImage: \"url(https://source.unsplash.com/random)\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: t => t.palette.mode === \"light\" ? t.palette.grey[50] : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        md: 5,\n        component: Paper,\n        elevation: 6,\n        square: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            my: 16,\n            height: \"100vh\",\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            width: \"100\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            onSubmit: handleSubmit,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              variant: \"outlined\",\n              id: \"name\",\n              label: \"Username\",\n              name: \"username\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              variant: \"outlined\",\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              autoComplete: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MuiPhoneNumber, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"phone\",\n              defaultCountry: \"in\",\n              label: \"Phone Number\",\n              name: \"Phone No.\",\n              autoFocus: true,\n              variant: \"outlined\",\n              onChange: e => setPhone(e),\n              value: phone,\n              onBlur: handleOnBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"recaptcha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"contained\",\n              type: \"submit\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              className: styles.btn,\n              onClick: handleSubmit,\n              style: {\n                display: display ? \"inline-flex\" : \"none\"\n              },\n              children: \"Send OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              value: OTP,\n              onChange: e => setOTP(e.target.value),\n              name: \"OTP\",\n              label: \"OTP\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"current-password\",\n              style: {\n                display: !display ? \"inline-flex\" : \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"contained\",\n              type: \"submit\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              className: styles.btn,\n              onClick: handleOTPSubmit,\n              style: {\n                display: !display ? \"inline-flex\" : \"none\"\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: \"/login\"\n                },\n                children: \"Login In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"z8ojMVMz95vvkuz+7oafsGLyKGo=\", false, function () {\n  return [useStyles, useHistory, useRecoilState, useRecoilState, useRecoilState, useRecoilState, useRecoilState];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/suhan/Foodey/foodey-testing/src/pages/Sign-up.js"],"names":["React","useState","makeStyles","Grid","Box","Paper","Typography","TextField","Button","useHistory","NavBar","useRecoilState","MuiPhoneNumber","Auth","addUser","isUserExists","Link","store","logo","useStyles","btn","backgroundColor","color","Login","styles","History","handleSubmit","e","preventDefault","phoneNumber","phone","replace","userExists","alert","Verify","setVerify","console","log","setDisplay","handleOTPSubmit","verify","confirm","OTP","then","result","Name","name","email","phoneNo","setIsLoggedIn","isOrdered","push","setPhone","setEmail","isLoggedIn","setName","display","setOTP","handleOnBlur","target","value","overflow","backgroundImage","backgroundRepeat","t","palette","mode","grey","backgroundSize","backgroundPosition","my","height","mx","flexDirection","alignItems","mt","mb","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACEC,IADF,EAEEC,GAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,SALF,EAMEC,MANF,QAOO,mBAPP;AAQA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,gBAAtC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,SAAS,GAAGjB,UAAU,CAAC;AAC3BkB,EAAAA,GAAG,EAAE;AACHC,IAAAA,eAAe,EAAE,SADd;AAEHC,IAAAA,KAAK,EAAE,MAFJ;AAGH,eAAW;AACTD,MAAAA,eAAe,EAAE,SADR;AAETC,MAAAA,KAAK,EAAE;AAFE;AAHR;AADsB,CAAD,CAA5B;;AAWA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,OAAO,GAAGhB,UAAU,EAA1B;;AAEA,QAAMiB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,WAAW,GAAGC,KAAK,CAACC,OAAN,CAAc,GAAd,EAAmB,EAAnB,EAAuBA,OAAvB,CAA+B,GAA/B,EAAoC,EAApC,CAApB;AACD,UAAMC,UAAU,GAAG,MAAMjB,YAAY,CAACe,KAAD,CAArC;AAEC,QAAIE,UAAJ,EACEC,KAAK,CAAC,sBAAD,CAAL,CADF,KAEK;AACL,YAAMC,MAAM,GAAG,MAAMrB,IAAI,CAACgB,WAAD,CAAzB;AACAM,MAAAA,SAAS,CAACD,MAAD,CAAT;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAI,MAAAA,UAAU,CAAC,KAAD,CAAV;AACC;AACF,GAbD;;AAcA,QAAMC,eAAe,GAAG,YAAY;AAClCH,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACAA,IAAAA,MAAM,CAACC,OAAP,CAAeC,GAAf,EAAoBC,IAApB,CAA0BC,MAAD,IAAY;AACjC9B,MAAAA,OAAO,CAAC;AACN+B,QAAAA,IAAI,EAAEC,IADA;AAENC,QAAAA,KAAK,EAAEA,KAFD;AAGNC,QAAAA,OAAO,EAAElB;AAHH,OAAD,CAAP;AAKFmB,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA,UAAIC,SAAJ,EAAezB,OAAO,CAAC0B,IAAR,CAAa,UAAb,EAAf,KACK1B,OAAO,CAAC0B,IAAR,CAAa,GAAb;AAEN,KAVD;AAWD,GAbD;;AAcA,QAAM,CAACrB,KAAD,EAAQsB,QAAR,IAAoBzC,cAAc,CAACM,KAAK,CAAC+B,OAAP,CAAxC;AACA,QAAM,CAACD,KAAD,EAAQM,QAAR,IAAoB1C,cAAc,CAACM,KAAK,CAAC8B,KAAP,CAAxC;AACA,QAAM,GAAGE,aAAH,IAAoBtC,cAAc,CAACM,KAAK,CAACqC,UAAP,CAAxC;AACA,QAAM,CAACJ,SAAD,IAAcvC,cAAc,CAACM,KAAK,CAACiC,SAAP,CAAlC;AACA,QAAM,CAACJ,IAAD,EAAOS,OAAP,IAAkB5C,cAAc,CAACM,KAAK,CAAC6B,IAAP,CAAtC;AACA,QAAM,CAACU,OAAD,EAAUlB,UAAV,IAAwBrC,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACuC,MAAD,EAASL,SAAT,IAAsBlC,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACyC,GAAD,EAAMe,MAAN,IAAgBxD,QAAQ,CAAC,IAAD,CAA9B;;AAEA,QAAMyD,YAAY,GAAI/B,CAAD,IAAO;AAC1ByB,IAAAA,QAAQ,CAACzB,CAAC,CAACgC,MAAF,CAASC,KAAV,CAAR;AACAxB,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAE+B,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,OAAhB;AAAyB,MAAA,KAAK,EAAC,aAA/B;AAA6C,MAAA,MAAM,EAAE;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE,KAFN;AAGE,QAAA,EAAE,EAAE,CAHN;AAIE,QAAA,EAAE,EAAE,CAJN;AAKE,QAAA,EAAE,EAAE;AACFC,UAAAA,eAAe,EAAE,yCADf;AAEFC,UAAAA,gBAAgB,EAAE,WAFhB;AAGF1C,UAAAA,eAAe,EAAG2C,CAAD,IACfA,CAAC,CAACC,OAAF,CAAUC,IAAV,KAAmB,OAAnB,GACIF,CAAC,CAACC,OAAF,CAAUE,IAAV,CAAe,EAAf,CADJ,GAEIH,CAAC,CAACC,OAAF,CAAUE,IAAV,CAAe,GAAf,CANJ;AAOFC,UAAAA,cAAc,EAAE,OAPd;AAQFC,UAAAA,kBAAkB,EAAE;AARlB;AALN;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAiC,QAAA,SAAS,EAAEhE,KAA5C;AAAmD,QAAA,SAAS,EAAE,CAA9D;AAAiE,QAAA,MAAM,MAAvE;AAAA,+BACE,QAAC,GAAD;AACE,UAAA,EAAE,EAAE;AACFiE,YAAAA,EAAE,EAAE,EADF;AAEFC,YAAAA,MAAM,EAAE,OAFN;AAGFC,YAAAA,EAAE,EAAE,CAHF;AAIFhB,YAAAA,OAAO,EAAE,MAJP;AAKFiB,YAAAA,aAAa,EAAE,QALb;AAMFC,YAAAA,UAAU,EAAE;AANV,WADN;AAAA,kCAUE;AAAK,YAAA,GAAG,EAAExD,IAAV;AAAgB,YAAA,KAAK,EAAC,KAAtB;AAA4B,YAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAVF,eAWE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,IAAtB;AAA2B,YAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAcE,QAAC,GAAD;AACE,YAAA,SAAS,EAAC,MADZ;AAEE,YAAA,UAAU,MAFZ;AAGE,YAAA,QAAQ,EAAEQ,YAHZ;AAIE,YAAA,EAAE,EAAE;AAAEiD,cAAAA,EAAE,EAAE;AAAN,aAJN;AAAA,oCAME,QAAC,SAAD;AACE,cAAA,MAAM,EAAC,QADT;AAEE,cAAA,QAAQ,MAFV;AAGE,cAAA,SAAS,MAHX;AAIE,cAAA,OAAO,EAAC,UAJV;AAKE,cAAA,EAAE,EAAC,MALL;AAME,cAAA,KAAK,EAAC,UANR;AAOE,cAAA,IAAI,EAAC,UAPP;AAQE,cAAA,KAAK,EAAE7B,IART;AASE,cAAA,QAAQ,EAAGnB,CAAD,IAAO4B,OAAO,CAAC5B,CAAC,CAACgC,MAAF,CAASC,KAAV,CAT1B;AAUE,cAAA,SAAS;AAVX;AAAA;AAAA;AAAA;AAAA,oBANF,eAkBE,QAAC,SAAD;AACE,cAAA,MAAM,EAAC,QADT;AAEE,cAAA,QAAQ,MAFV;AAGE,cAAA,SAAS,MAHX;AAIE,cAAA,OAAO,EAAC,UAJV;AAKE,cAAA,EAAE,EAAC,OALL;AAME,cAAA,KAAK,EAAC,eANR;AAOE,cAAA,IAAI,EAAC,OAPP;AAQE,cAAA,YAAY,EAAC,OARf;AASE,cAAA,KAAK,EAAEb,KATT;AAUE,cAAA,QAAQ,EAAGpB,CAAD,IAAO0B,QAAQ,CAAC1B,CAAC,CAACgC,MAAF,CAASC,KAAV,CAV3B;AAWE,cAAA,SAAS;AAXX;AAAA;AAAA;AAAA;AAAA,oBAlBF,eA+BE,QAAC,cAAD;AACE,cAAA,MAAM,EAAC,QADT;AAEE,cAAA,QAAQ,MAFV;AAGE,cAAA,SAAS,MAHX;AAIE,cAAA,EAAE,EAAC,OAJL;AAKE,cAAA,cAAc,EAAE,IALlB;AAME,cAAA,KAAK,EAAC,cANR;AAOE,cAAA,IAAI,EAAC,WAPP;AAQE,cAAA,SAAS,MARX;AASE,cAAA,OAAO,EAAC,UATV;AAUE,cAAA,QAAQ,EAAGjC,CAAD,IAAOyB,QAAQ,CAACzB,CAAD,CAV3B;AAWE,cAAA,KAAK,EAAEG,KAXT;AAYE,cAAA,MAAM,EAAE4B;AAZV;AAAA;AAAA;AAAA;AAAA,oBA/BF,eA6CE;AAAK,cAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,oBA7CF,eA+CE,QAAC,MAAD;AACE,cAAA,SAAS,MADX;AAEE,cAAA,OAAO,EAAC,WAFV;AAGE,cAAA,IAAI,EAAC,QAHP;AAIE,cAAA,EAAE,EAAE;AAAEiB,gBAAAA,EAAE,EAAE,CAAN;AAASC,gBAAAA,EAAE,EAAE;AAAb,eAJN;AAKE,cAAA,SAAS,EAAEpD,MAAM,CAACJ,GALpB;AAME,cAAA,OAAO,EAAEM,YANX;AAOE,cAAA,KAAK,EAAE;AACL8B,gBAAAA,OAAO,EAAEA,OAAO,GAAG,aAAH,GAAmB;AAD9B,eAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/CF,eA4DE,QAAC,SAAD;AACE,cAAA,MAAM,EAAC,QADT;AAEE,cAAA,QAAQ,MAFV;AAGE,cAAA,SAAS,MAHX;AAIE,cAAA,KAAK,EAAEd,GAJT;AAKE,cAAA,QAAQ,EAAGf,CAAD,IAAO8B,MAAM,CAAC9B,CAAC,CAACgC,MAAF,CAASC,KAAV,CALzB;AAME,cAAA,IAAI,EAAC,KANP;AAOE,cAAA,KAAK,EAAC,KAPR;AAQE,cAAA,IAAI,EAAC,UARP;AASE,cAAA,EAAE,EAAC,UATL;AAUE,cAAA,YAAY,EAAC,kBAVf;AAWE,cAAA,KAAK,EAAE;AACLJ,gBAAAA,OAAO,EAAE,CAACA,OAAD,GAAW,aAAX,GAA2B;AAD/B;AAXT;AAAA;AAAA;AAAA;AAAA,oBA5DF,eA2EE,QAAC,MAAD;AACE,cAAA,SAAS,MADX;AAEE,cAAA,OAAO,EAAC,WAFV;AAGE,cAAA,IAAI,EAAC,QAHP;AAIE,cAAA,EAAE,EAAE;AAAEmB,gBAAAA,EAAE,EAAE,CAAN;AAASC,gBAAAA,EAAE,EAAE;AAAb,eAJN;AAKE,cAAA,SAAS,EAAEpD,MAAM,CAACJ,GALpB;AAME,cAAA,OAAO,EAAEmB,eANX;AAOE,cAAA,KAAK,EAAE;AACLiB,gBAAAA,OAAO,EAAE,CAACA,OAAD,GAAW,aAAX,GAA2B;AAD/B,eAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3EF,eAwFE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,SAApB;AAAA,kEAEE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAE;AAAEqB,kBAAAA,QAAQ,EAAE;AAAZ,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqID,CAnLD;;GAAMtD,K;UACWJ,S,EACCV,U,EA8BUE,c,EACAA,c,EACAA,c,EACNA,c,EACIA,c;;;KApCpBY,K;AAqLN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  Box,\n  Paper,\n  Typography,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport NavBar from \"../components/navBar\";\nimport { useRecoilState } from \"recoil\";\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport Auth from \"../firebase/auth.js\";\nimport { addUser, isUserExists } from \"../firebase/db\";\nimport { Link } from \"react-router-dom\";\nimport store from \"../store\";\nimport logo from \"../assets/logo.png\";\n\nconst useStyles = makeStyles({\n  btn: {\n    backgroundColor: \"#f36f27\",\n    color: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"#f36f27\",\n      color: \"#fff\",\n    },\n  },\n});\n\nconst Login = () => {\n  const styles = useStyles();\n  const History = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const phoneNumber = phone.replace(\" \", \"\").replace(\"-\", \"\");\n   const userExists = await isUserExists(phone);\n    \n    if (userExists)\n      alert(\"User already exists.\")\n    else {\n    const Verify = await Auth(phoneNumber);\n    setVerify(Verify);\n    console.log(Verify);\n    setDisplay(false);\n    }\n  };\n  const handleOTPSubmit = async () => {\n    console.log(verify);\n    verify.confirm(OTP).then((result) => {\n        addUser({\n          Name: name,\n          email: email,\n          phoneNo: phone,\n        });\n      setIsLoggedIn(true);\n      if (isOrdered) History.push(\"/invoice\");\n      else History.push(\"/\");\n  \n    });\n  };\n  const [phone, setPhone] = useRecoilState(store.phoneNo);\n  const [email, setEmail] = useRecoilState(store.email);\n  const [, setIsLoggedIn] = useRecoilState(store.isLoggedIn);\n  const [isOrdered] = useRecoilState(store.isOrdered);\n  const [name, setName] = useRecoilState(store.name);\n  const [display, setDisplay] = useState(true);\n  const [verify, setVerify] = useState(null);\n  const [OTP, setOTP] = useState(null);\n\n  const handleOnBlur = (e) => {\n    setPhone(e.target.value);\n    console.log(phone);\n  };\n\n  return (\n    <div style={{ overflow: \"hidden\" }}>\n      <NavBar active={\"login\"} Color=\"transparent\" scroll={false} />\n      <Grid container>\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: \"url(https://source.unsplash.com/random)\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: (t) =>\n              t.palette.mode === \"light\"\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 16,\n              height: \"100vh\",\n              mx: 4,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <img src={logo} width=\"100\" alt=\"logo\" />\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign Up\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"outlined\"\n                id=\"name\"\n                label=\"Username\"\n                name=\"username\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                variant=\"outlined\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                autoFocus\n              />\n              <MuiPhoneNumber\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"phone\"\n                defaultCountry={\"in\"}\n                label=\"Phone Number\"\n                name=\"Phone No.\"\n                autoFocus\n                variant=\"outlined\"\n                onChange={(e) => setPhone(e)}\n                value={phone}\n                onBlur={handleOnBlur}\n              />\n              <div id=\"recaptcha\"></div>\n\n              <Button\n                fullWidth\n                variant=\"contained\"\n                type=\"submit\"\n                sx={{ mt: 3, mb: 2 }}\n                className={styles.btn}\n                onClick={handleSubmit}\n                style={{\n                  display: display ? \"inline-flex\" : \"none\",\n                }}\n              >\n                Send OTP\n              </Button>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                value={OTP}\n                onChange={(e) => setOTP(e.target.value)}\n                name=\"OTP\"\n                label=\"OTP\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                style={{\n                  display: !display ? \"inline-flex\" : \"none\",\n                }}\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                type=\"submit\"\n                sx={{ mt: 3, mb: 2 }}\n                className={styles.btn}\n                onClick={handleOTPSubmit}\n                style={{\n                  display: !display ? \"inline-flex\" : \"none\",\n                }}\n              >\n                Submit\n              </Button>\n              <Typography variant=\"caption\">\n                Already have an account?\n                <Link to={{ pathname: \"/login\" }}>Login In</Link>\n              </Typography>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}