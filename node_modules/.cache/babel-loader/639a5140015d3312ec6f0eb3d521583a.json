{"ast":null,"code":"var _jsxFileName = \"/home/suhan/Foodey/foodey-testing/src/pages/Cooks.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Card, CardActionArea, CardMedia, CardContent, Button, Collapse, InputLabel, Select, MenuItem, FormControl, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport Store from \"../store\";\nimport NavBar from \"../components/navBar\";\nimport cooksData from \"../store\";\nimport \"./styles/Cooks.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  subscription: Subscription,\n  isLoggedIn: loggedIn\n} = Store;\nconst useCookStyles = makeStyles({\n  grid: {\n    paddingLeft: \"15vh\"\n  }\n});\n\nconst Cooks = () => {\n  _s();\n\n  const params = useParams();\n  const History = useHistory();\n  const state = params.state;\n  const styles = useCookStyles();\n  const reqCooks = useRecoilValue(cooksData.currCook);\n  console.table(reqCooks);\n\n  const contentCreator = (name, region, experience, specialization) => `${name} hails from ${region}. He has ${experience} years of experience in cooking and specilises in ${specialization} dishes.`;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CooksPage\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      active: \"Community\",\n      display: true,\n      Color: \"#FBFEFD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cooksHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select a Cook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      direction: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      className: styles.grid,\n      children: reqCooks.map(cook => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 4,\n        xl: 4,\n        children: [/*#__PURE__*/_jsxDEV(Carder, {\n          name: cook.Name,\n          ratings: cook.Ratings,\n          image: cook.Profile_Image,\n          History: History,\n          id: cook.id,\n          cook: cook,\n          description: contentCreator(cook.Name, cook.Region, cook.Year_Of_Experience, cook.Speciality)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cooks, \"1HHGvlmGwID5iS71P2DR8yQbZ0k=\", false, function () {\n  return [useParams, useHistory, useCookStyles, useRecoilValue];\n});\n\n_c = Cooks;\nexport default Cooks;\nconst useStyles = makeStyles({\n  body: {\n    maxWidth: 250,\n    fontFamily: `'Poppins', sans-serif`,\n    borderRadius: 0 //  backgroundColor: 'rgba(251,254,253 ,0.1)'\n\n  },\n\n  /*flex: {\n       // ignore no-useless-computed-key\n     [\"@media (max-width:500px)\"]: {\n       // eslint-disable-line no-useless-computed-key\n       //        display: 'flex'\n     },\n   }, */\n  image: {\n    height: 250 //   objectToFit: \"cover\"\n\n  },\n  btn: {\n    backgroundColor: \"#f36f27\",\n    color: \"#fff\",\n    boxShadow: \"none\",\n    marginLeft: \"55%\",\n    borderRadius: 0\n  },\n  btns: {\n    width: \"100%\",\n    backgroundColor: \"#f36f27\",\n    color: \"#fff\",\n    boxShadow: \"none\",\n    borderRadius: 0,\n    marginTop: \"10px\"\n  }\n});\n\nconst Carder = props => {\n  _s2();\n\n  //  const History = useHistory();\n  const styles = useStyles();\n  const [subscription, setSubscription] = useRecoilState(Subscription);\n  const [, setCook] = useRecoilState(cooksData.selectedCook);\n  const [open, setOpen] = useState(false);\n\n  const handleChange = e => setSubscription(e.target.value);\n\n  const handleClick = () => {\n    setCook(props.cook);\n    props.History.push(`/cook/${props.id}`);\n  };\n\n  const isLoggedIn = useRecoilValue(loggedIn);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: props.Id,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.body,\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        className: styles.flex,\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          image: props.image,\n          className: styles.image,\n          title: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: props.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-body\",\n            children: props.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cook-ratings\",\n            children: [\"Ratings: \", props.ratings, \"/5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.btn,\n            variant: \"contained\",\n            style: {\n              backgroundColor: !open ? \"#f36f27\" : \"grey\",\n              display: \"none\"\n            },\n            onClick: () => setOpen(!open),\n            children: !open ? \"Select\" : \"Unselect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: open,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"forms\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"subscription\",\n                children: \"Type of Subscription\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"outlined\",\n                className: styles.formControl,\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"subscription\",\n                  value: subscription,\n                  onChange: handleChange,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"month\",\n                    children: \"Monthly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"week\",\n                    children: \"Weekly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"daily\",\n                    children: \"Daily\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: styles.btns,\n                variant: \"contained\",\n                onClick: () => !isLoggedIn ? props.History.push(\"/login\") : props.History.push(\"/invoice\"),\n                children: \"Proceed to Checkout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Carder, \"RuTAUHz24PTyzO5WW+pzsdbwvsA=\", false, function () {\n  return [useStyles, useRecoilState, useRecoilState, useRecoilValue];\n});\n\n_c2 = Carder;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cooks\");\n$RefreshReg$(_c2, \"Carder\");","map":{"version":3,"sources":["/home/suhan/Foodey/foodey-testing/src/pages/Cooks.js"],"names":["React","useState","useParams","useHistory","Card","CardActionArea","CardMedia","CardContent","Button","Collapse","InputLabel","Select","MenuItem","FormControl","Grid","makeStyles","useRecoilState","useRecoilValue","Store","NavBar","cooksData","subscription","Subscription","isLoggedIn","loggedIn","useCookStyles","grid","paddingLeft","Cooks","params","History","state","styles","reqCooks","currCook","console","table","contentCreator","name","region","experience","specialization","map","cook","Name","Ratings","Profile_Image","id","Region","Year_Of_Experience","Speciality","useStyles","body","maxWidth","fontFamily","borderRadius","image","height","btn","backgroundColor","color","boxShadow","marginLeft","btns","width","marginTop","Carder","props","setSubscription","setCook","selectedCook","open","setOpen","handleChange","e","target","value","handleClick","push","Id","flex","description","ratings","display","formControl"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  Button,\n  Collapse,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControl,\n  Grid,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport Store from \"../store\";\nimport NavBar from \"../components/navBar\";\nimport cooksData from \"../store\";\nimport \"./styles/Cooks.css\";\n\nconst { subscription: Subscription, isLoggedIn: loggedIn } = Store;\n\nconst useCookStyles = makeStyles({\n  grid: {\n    paddingLeft: \"15vh\",\n  },\n});\n\nconst Cooks = () => {\n  const params = useParams();\n  const History = useHistory();\n  const state = params.state;\n  const styles = useCookStyles();\n  const reqCooks = useRecoilValue (cooksData.currCook);\n  console.table(reqCooks)\n\n  const contentCreator = (name, region, experience, specialization) =>\n    `${name} hails from ${region}. He has ${experience} years of experience in cooking and specilises in ${specialization} dishes.`;\n\n  return (\n    <div className=\"CooksPage\">\n      <NavBar active=\"Community\" display={true}  Color=\"#FBFEFD\" />\n      <div className=\"cooksHeader\">\n        <h1>Select a Cook</h1>\n      </div>\n      <Grid\n        container\n        spacing={3}\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        className={styles.grid}\n      >\n        {reqCooks.map((cook) => (\n          <Grid item xs={12} sm={6} md={4} lg={4} xl={4}>\n            <Carder\n              name={cook.Name}\n              ratings={cook.Ratings}\n              image={cook.Profile_Image}\n              History={History}\n              id={cook.id}\n              cook={cook}\n              description={contentCreator(\n                cook.Name,\n                cook.Region,\n                cook.Year_Of_Experience,\n                cook.Speciality\n              )}\n            />{\" \"}\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cooks;\n\nconst useStyles = makeStyles({\n  body: {\n    maxWidth: 250,\n    fontFamily: `'Poppins', sans-serif`,\n    borderRadius: 0,\n    //  backgroundColor: 'rgba(251,254,253 ,0.1)'\n  },\n /*flex: {\n      // ignore no-useless-computed-key\n    [\"@media (max-width:500px)\"]: {\n      // eslint-disable-line no-useless-computed-key\n      //        display: 'flex'\n    },\n  }, */\n\n  image: {\n    height: 250,\n    //   objectToFit: \"cover\"\n  },\n  btn: {\n    backgroundColor: \"#f36f27\",\n    color: \"#fff\",\n    boxShadow: \"none\",\n    marginLeft: \"55%\",\n    borderRadius: 0,\n  },\n  btns: {\n    width: \"100%\",\n    backgroundColor: \"#f36f27\",\n    color: \"#fff\",\n    boxShadow: \"none\",\n    borderRadius: 0,\n    marginTop: \"10px\",\n  },\n});\n\nconst Carder = (props) => {\n  //  const History = useHistory();\n  const styles = useStyles();\n  const [subscription, setSubscription] = useRecoilState(Subscription);\n  const [, setCook] = useRecoilState (cooksData.selectedCook);\n  const [open, setOpen] = useState(false);\n  const handleChange = (e) => setSubscription(e.target.value);\n  const handleClick = ()=>{\n    setCook (props.cook)\n    props.History.push(`/cook/${props.id}`);\n\n  }\n  const isLoggedIn = useRecoilValue(loggedIn);\n  return (\n    <div id={props.Id}>\n      <Card\n        className={styles.body}\n        onClick={handleClick}\n      >\n        <CardActionArea className={styles.flex}>\n          <CardMedia\n            image={props.image}\n            className={styles.image}\n            title={props.name}\n          />\n          <CardContent>\n            <h4 className=\"card-title\">{props.name}</h4>\n            <p className=\"card-body\">{props.description}</p>\n            <div className=\"cook-ratings\">Ratings: {props.ratings}/5</div>\n            <Button\n              className={styles.btn}\n              variant=\"contained\"\n              style={{\n                backgroundColor: !open ? \"#f36f27\" : \"grey\",\n                display: \"none\",\n              }}\n              onClick={() => setOpen(!open)}\n            >\n              {!open ? \"Select\" : \"Unselect\"}\n            </Button>\n            <Collapse in={open}>\n              <form className=\"forms\">\n                <InputLabel id=\"subscription\">Type of Subscription</InputLabel>\n                <FormControl variant=\"outlined\" className={styles.formControl}>\n                  <Select\n                    labelId=\"subscription\"\n                    value={subscription}\n                    onChange={handleChange}\n                  >\n                    <MenuItem value={\"month\"}>Monthly</MenuItem>\n                    <MenuItem value={\"week\"}>Weekly</MenuItem>\n                    <MenuItem value={\"daily\"}>Daily</MenuItem>\n                  </Select>\n                </FormControl>\n                <Button\n                  className={styles.btns}\n                  variant=\"contained\"\n                  onClick={() =>\n                    !isLoggedIn\n                      ? props.History.push(\"/login\")\n                      : props.History.push(\"/invoice\")\n                  }\n                >\n                  Proceed to Checkout\n                </Button>\n              </form>\n            </Collapse>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}